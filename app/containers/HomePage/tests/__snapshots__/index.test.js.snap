exports[`<HomePage /> Expect it to match snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <HelmetWrapper
        meta={
            Array [
                Object {
                  "content": "Find out what the weather is like in your area",
                  "name": "description",
                },
              ]
        }
        title="Weatherly - Weather happens" />
    <AppBar
        showMenuIconButton={true}
        title="Weatherly"
        zDepth={1} />
    <LocationForm
        addLocation={undefined}
        searchForLocation={[Function]} />
</styled.div>,
  "nodes": Array [
    <styled.div>
      <HelmetWrapper
            meta={
                  Array [
                        Object {
                          "content": "Find out what the weather is like in your area",
                          "name": "description",
                        },
                      ]
            }
            title="Weatherly - Weather happens" />
      <AppBar
            showMenuIconButton={true}
            title="Weatherly"
            zDepth={1} />
      <LocationForm
            addLocation={undefined}
            searchForLocation={[Function]} />
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 1,
      "_context": Object {},
      "_currentElement": <HomePage
        dispatch={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": HomePage {
        "_reactInternalInstance": [Circular],
        "componentDidMount": [Function],
        "context": Object {},
        "getTempExtremesString": [Function],
        "props": Object {
          "dispatch": [Function],
        },
        "refs": Object {},
        "searchForLocation": [Function],
        "selectSuggestion": [Function],
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <HelmetWrapper
                    meta={
                              Array [
                                        Object {
                                          "content": "Find out what the weather is like in your area",
                                          "name": "description",
                                        },
                                      ]
                    }
                    title="Weatherly - Weather happens" />
          <AppBar
                    showMenuIconButton={true}
                    title="Weatherly"
                    zDepth={1} />
          <LocationForm
                    addLocation={undefined}
                    searchForLocation={[Function]} />
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <HelmetWrapper
                    meta={
                              Array [
                                        Object {
                                          "content": "Find out what the weather is like in your area",
                                          "name": "description",
                                        },
                                      ]
                    }
                    title="Weatherly - Weather happens" />
          <AppBar
                    showMenuIconButton={true}
                    title="Weatherly"
                    zDepth={1} />
          <LocationForm
                    addLocation={undefined}
                    searchForLocation={[Function]} />
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <HomePage
    dispatch={[Function]} />,
}
`;
