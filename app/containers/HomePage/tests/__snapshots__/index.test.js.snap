exports[`<HomePage /> Expect it to match snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <HelmetWrapper
        meta={
            Array [
                Object {
                  "content": "Find out what the weather is like in your area",
                  "name": "description",
                },
              ]
        }
        title="Weatherly - Weather happens" />
    <withStyles(AppBar)
        position="static">
        <withStyles(Toolbar)>
            <withStyles(Typography)
                color="inherit"
                type="title">
                Weatherly
            </withStyles(Typography)>
        </withStyles(Toolbar)>
    </withStyles(AppBar)>
    <h1>
        <FormattedMessage
            defaultMessage="What\'s the weather like where you are?"
            id="app.containers.HomePage.header"
            tagName="span"
            values={Object {}} />
    </h1>
    <form
        onSubmit={[Function]}>
        <withStyles(Input)
            defaultValue="Denver, CO"
            onChange={undefined} />
        <withStyles(Button)
            color="accent"
            raised={true}
            type="submit">
            Go
        </withStyles(Button)>
    </form>
</div>,
  "nodes": Array [
    <div>
      <HelmetWrapper
            meta={
                  Array [
                        Object {
                          "content": "Find out what the weather is like in your area",
                          "name": "description",
                        },
                      ]
            }
            title="Weatherly - Weather happens" />
      <withStyles(AppBar)
            position="static">
            <withStyles(Toolbar)>
                  <withStyles(Typography)
                        color="inherit"
                        type="title">
                        Weatherly
                  </withStyles(Typography)>
            </withStyles(Toolbar)>
      </withStyles(AppBar)>
      <h1>
            <FormattedMessage
                  defaultMessage="What\'s the weather like where you are?"
                  id="app.containers.HomePage.header"
                  tagName="span"
                  values={Object {}} />
      </h1>
      <form
            onSubmit={[Function]}>
            <withStyles(Input)
                  defaultValue="Denver, CO"
                  onChange={undefined} />
            <withStyles(Button)
                  color="accent"
                  raised={true}
                  type="submit">
                  Go
            </withStyles(Button)>
      </form>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 1,
      "_context": Object {},
      "_currentElement": <HomePage
        dispatch={[Function]} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": HomePage {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "getTempExtremesString": [Function],
        "props": Object {
          "dispatch": [Function],
        },
        "refs": Object {},
        "state": null,
        "submitLocation": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <HelmetWrapper
                    meta={
                              Array [
                                        Object {
                                          "content": "Find out what the weather is like in your area",
                                          "name": "description",
                                        },
                                      ]
                    }
                    title="Weatherly - Weather happens" />
          <withStyles(AppBar)
                    position="static">
                    <withStyles(Toolbar)>
                              <withStyles(Typography)
                                        color="inherit"
                                        type="title">
                                        Weatherly
                              </withStyles(Typography)>
                    </withStyles(Toolbar)>
          </withStyles(AppBar)>
          <h1>
                    <FormattedMessage
                              defaultMessage="What\'s the weather like where you are?"
                              id="app.containers.HomePage.header"
                              tagName="span"
                              values={Object {}} />
          </h1>
          <form
                    onSubmit={[Function]}>
                    <withStyles(Input)
                              defaultValue="Denver, CO"
                              onChange={undefined} />
                    <withStyles(Button)
                              color="accent"
                              raised={true}
                              type="submit">
                              Go
                    </withStyles(Button)>
          </form>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <HelmetWrapper
                    meta={
                              Array [
                                        Object {
                                          "content": "Find out what the weather is like in your area",
                                          "name": "description",
                                        },
                                      ]
                    }
                    title="Weatherly - Weather happens" />
          <withStyles(AppBar)
                    position="static">
                    <withStyles(Toolbar)>
                              <withStyles(Typography)
                                        color="inherit"
                                        type="title">
                                        Weatherly
                              </withStyles(Typography)>
                    </withStyles(Toolbar)>
          </withStyles(AppBar)>
          <h1>
                    <FormattedMessage
                              defaultMessage="What\'s the weather like where you are?"
                              id="app.containers.HomePage.header"
                              tagName="span"
                              values={Object {}} />
          </h1>
          <form
                    onSubmit={[Function]}>
                    <withStyles(Input)
                              defaultValue="Denver, CO"
                              onChange={undefined} />
                    <withStyles(Button)
                              color="accent"
                              raised={true}
                              type="submit">
                              Go
                    </withStyles(Button)>
          </form>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <HomePage
    dispatch={[Function]} />,
}
`;
